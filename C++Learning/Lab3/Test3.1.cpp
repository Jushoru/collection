#include <iostream>
#include <string>

using namespace std;

long long cleaning()
{
	long long result = 0;
	for (char c = std::cin.get(); c != '\n'; c = std::cin.get()) {
		if (std::isspace(c) || c == '-') {
			continue;
		}
		if (!std::isdigit(c)) {
			break;
		}
		result *= 10;
		result += c - '0';
	}
	return result;
}

int checking(long long n)
{
	long long i;
	int  j = 0, s = 0;

	// Проверка длинны введённого номера (СНИЛС должен содержать 11 цифр)
	if (n < 99899899800 && n > 9999999999)
	{
		for (i = 100; i <= 100000000; i *= 10)
		{
			/*
			* Проверка всех троек чисел на то, чтобы в них не было более 2х
			* одинаковых цифр. Если три цифры одинаковы, то выполняется
			* оператор break
			*/
			if ((n / i) % 10 == (n / (i * 10)) % 10 && (n / i) % 10 == (n / (i * 100)) % 10)
			{
				break;
			}
			//Изменение порядкового номера
			j++;
			/*
			* Подсчёт суммы произведений цифр умноженных
			* на их порядковый номер
			*/
			s += (((n / i) % 10) * j);
		}

		/*
		* Выполнение данного условия означает, что предыдущий цикл for
		* был завершён досрочно, а соответственно данное число не СНИЛС
		*/
		if (i <= 100000000)
		{
			cout << "Нет, это не СНИЛС" << endl;
		}
		else
		{
			// Подсчёт недостающих произведений цифр на их порядковые номера
			s += (n / i) % 10 * (j + 1);
			s += (n / (i * 10)) % 10 * (j + 2);


			/*
			* Проверка всех условий из задания
			* В данном случае переменная i выступает в качестве верного
			* двузначного контрольного числа
			*/
			if (s < 100)
			{
				i = s;
			}
			else if (s == 100 || s == 101)
			{
				i = 00;
			}
			else if (s > 101)
			{
				i = s % 101;
				if (i == 100)
				{
					i = 00;
				}
			}


			// Сравнение введённого и верного двузначных контрольных чисел
			if (n % 100 == i)
			{
				cout << "Да, это СНИЛС!!!" << endl;
			}
			else
			{
				cout << "Нет, это не СНИЛС" << endl;
			}
		}
	}
	else
	{
		cout << "Нет, это не СНИЛС" << endl;
	}
	return 0;
}



int main()
{
	system("chcp 1251");

	cout << "Введите номер СНИЛС: " << endl;

	checking(cleaning());
}