/*
* Требуется реализовать алгоритм, проверяющий, является ли число
* суперпростым. Обоснуйте типы данных, используемые в алгоритме.
*/

#include <iostream>
#include <math.h>

using namespace std;

int main()
{
	system("chcp 1251");

	/*
	* Выбран тип unsigned int, поскольку представляет собой набор
	* целых положительных чисел, а в задаче ммы проверяем является ли число простым,
	* соответственно я подразумеваю, что будут вводится целые положительные числа
	* Задаваемое число, счетчики i и j, номер последнего простого числа
	*/
	unsigned int n, j, i, k = 0;
	cout << "n = "; cin >> n;


	//Проверка, является ли заданное число простым
	for (i = 2; i <= sqrt(n); i++)
	{
		if (n % i == 0)
		{
			break;
		}
	}


	/*
	* Если условие выполняется, значит в ходе предыдущей проверки
	* выполнился оператор break, а значит заданное число не простое,
	* потому я зануляю его, для удобства в следующей проверке
	*/
	if (i <= sqrt(n))
	{
		n = 0;
	}


	//Если выполняется данное условие, то заданное число - простое
	if (n >= 2)
	{
		/*
		* При помощи данного цикла идет подсчёт порядкового номера последнего простого числа,
		* путём перебора всех простых чисел от 2ух до заданного простого числа
		*/
		for (i = 2; i <= n; i++)
		{
			for (j = 2; j < i; j++)
			{
				if (i % j == 0)
				{
					break;
				}
			}
			if (j == i)
			{
				k++;
			}
		}
		

		//Проверка, является ли порядковый номер простым числом
		for (i = 2; i <= sqrt(k); i++)
		{
			if (k % i == 0)
			{
				break;
			}
		}


		/*
		* Если условие выполняется, значит в ходе предыдущей проверки
		* выполнился оператор break, а значит порядковый номер не является простым,
		* согласно этому можно сделать соответствующие выводы
		*/
		if (i <= sqrt(k))
		{
			cout << "Это простое, но НЕ суперпростое число" << endl;
		}
		else
		{
			cout << "Это суперпростое число!" << endl;
		}

	}
	else
	{
		cout << "Это НЕ простое число" << endl;
	}

}
